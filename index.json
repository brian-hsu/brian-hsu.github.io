[{"categories":["Linux"],"contents":".tar\n打包： tar cvf FileName.tar DirName 解包： tar xvf FileName.tar .gz\n壓縮： gzip FileName 解壓1：gunzip FileName.gz 解壓2：gzip -d FileName.gz  推薦使用 .tar.gz .tar.gz\n壓縮：tar zcvf FileName.tar.gz DirName 解壓：tar zxvf FileName.tar.gz  .bz2\n壓縮： bzip2 -z FileName 解壓1：bzip2 -d FileName.bz2 解壓2：bunzip2 FileName.bz2 .tar.bz2\n壓縮：tar jcvf FileName.tar.bz2 DirName 解壓：tar jxvf FileName.tar.bz2 ","permalink":"https://brian-hsu.github.io/blog/my_share-014/","tags":["tar"],"title":"Linux 常見壓縮與解壓縮指令"},{"categories":["Docker"],"contents":"docker pull portainer/portainer docker run -d --restart always --name portainer -p 9000:9000 \\ -v /var/run/docker.sock:/var/run/docker.sock \\ -v /volume1/homes/docker_data/portainer:/data \\ portainer/portainer Docker 宿主主機 IP:9000 第一次使用需要設定 admin 的密碼，連續輸入兩次後就能設定完畢，接著就能看見華麗麗的登入頁面 第一次 admin 登入完畢後，它會問你要管理本地的還是遠端的 Docker, 選擇管理本地（local） 用力按 connect 進去主頁面吧 ","permalink":"https://brian-hsu.github.io/blog/my_share-013/","tags":["Portainer"],"title":"Docker Portainer"},{"categories":["Docker"],"contents":"列出docker container 全部資訊 docker container ls -a 刪除docker container 資料 docker container rm [CONTAINER ID] -d 進程 --restart always：如果 container 遇到例外的情況被 stop 掉，例如是重新開機，docker 會試著重新啟動此 container\n--name=xxx：設定 container 的 name 為 xxx\n-p: 做 port 的mapping，container裡的port 8080 mapping 到 host 的8080 port\ndocker rmi [IMAGE ID] : 刪除 images 的 image\n如果想一次過將所有 container 停止及刪除, 執行以下指令:\ndocker stop $(docker ps -a -q)\ndocker rm $(docker ps -a -q)\n jenkins 首先 建立資料夾 讓 jenkins 資料存放在 local # mkdir ~/docker_jenkins 避免出現權限問題 使用該指令更改 # chown -R 1000:1000 ~/docker_jenkins pull jenkins # docker pull jenkins/jenkins:lts-jdk11 docker run docker run -d --restart=always -v \\ /volume1/homes/docker_data/docker_jenkins/:/var/jenkins_home \\ -p 18080:8080 -p 50000:50000 \\ --name=jenkins jenkins/jenkins:2.289.1-lts-jdk11` -d : deamon --restart=always :重新啟動時 run container -v /volume1/homes/docker_data/docker_jenkins/:/var/jenkins_home :local 資料夾與 container 資料夾作用 -p 18080:8080 : local port 18080 與 container port 8080 作用 --name=jenkins : container name Administrator password 可以 cat ~/docker_jenkins/secrets/initialAdminPassword 貼上後 進入安裝 plugin 點選[Install suggested plugins]。 安裝完畢後 第一次執行會請你建立管理員，這邊直接按[Skip and continue as admin]跳過。 設定jenkins URL，使用預設的http://localhost:8080/即可，點選Save and Finish。 點選Start using Jenkins。 接著就進入Jenkins管理頁面首頁。 使用指令 docker exec -it jenkins bash 進入jenkins container的bash shell介面。 進入 root docker exec -it -u root jenkins /bin/bash 在People -\u0026gt; admin -\u0026gt; Configure頁面的Password欄位可修改密碼。 ","permalink":"https://brian-hsu.github.io/blog/my_share-012/","tags":["jenkins"],"title":"Docker 指令"},{"categories":["Linux"],"contents":"ubuntu 體系的 docker 安裝為 apt-get install docker.io 安裝好可以查詢 docker 版本 docker --version 啟動 docker 服務 service docker start 拉下第一個 image docker pull hello-world 查看 是否有 image docker images 試著跑 這個 image docker run hello-world 成功會顯示如下 Hello from Docker! This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the \u0026#34;hello-world\u0026#34; image from the Docker Hub. (amd64) 3. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://hub.docker.com/ For more examples and ideas, visit: https://docs.docker.com/get-started/ 如果執行 service docker stop 但是不完全停止服務 root@mint-vBox:~# service docker stop Warning: Stopping docker.service, but it can still be activated by: docker.socket 需要使用 systemctl stop docker.socket 終止 docker.socket ","permalink":"https://brian-hsu.github.io/blog/my_share-011/","tags":["docker"],"title":"Ubuntu install docker"},{"categories":["VBox"],"contents":"我們知道VM是虛擬技術之一 所以呢，創建好的機器也是一個獨立的環境 設定好 forwarding，就可以和本機系統互通了，最常用的就是 SSH 應用囉! 進去 forwarding 如下 設定 [主機IP] 就是127.0.0.1 主機的 port 選一個記得住並且沒有被使用 客體IP 就是 VBox 的系統 NAT裡面 DHCP 給的IP 客體Port 就是 VBox 的系統 使用的 port (假設我們要轉發 ssh port 22) ","permalink":"https://brian-hsu.github.io/blog/my_share-009/","tags":["forwarding"],"title":"VBox 設定 轉發 port"},{"categories":["Linux"],"contents":"搜尋文字 /[你要尋找的文字]\\c \\c 是指 忽略大小寫 進入搜尋文字 尋找 下一個匹配 按 n 鍵 (小寫n) 進入搜尋文字 尋找 上一個匹配 按 N 鍵 (大寫N，也可以說是 shift + n ) 會這幾個步驟，搭配 google 設定 Linux，可以節省不少時間喔。 ","permalink":"https://brian-hsu.github.io/blog/my_share-010/","tags":["Vim"],"title":"Vim 內部常用指令介紹"},{"categories":["Linux"],"contents":"# apt-get install ssh # apt-get install openssh-server 設定 ssh config # vim /etc/ssh/sshd_config Port 22 PasswordAuthentication yes PermitRootLogin yes # 是否開放 root 登入 重啟服務 /etc/init.d/ssh restart ","permalink":"https://brian-hsu.github.io/blog/my_share-008/","tags":["SSH"],"title":"設定 Linux (Ubuntu) SSH"},{"categories":["心得與介紹"],"contents":"HTML 文件之標題 \u0026lt;title\u0026gt; 本文內容 \u0026lt;body\u0026gt; 標題字 1 至 6 級 \u0026lt;h1\u0026gt; to \u0026lt;h6\u0026gt; 段落 \u0026lt;p\u0026gt; 換行 \u0026lt;br\u0026gt; 橫線 \u0026lt;hr\u0026gt; 註解 \u0026lt;!--...--\u0026gt; 粗體字 \u0026lt;b\u0026gt; 斜體字 \u0026lt;i\u0026gt; 文字刪除線 \u0026lt;s\u0026gt; ","permalink":"https://brian-hsu.github.io/blog/my_share-007/","tags":["HTML"],"title":"基本 HTML 語法 \u003cTAG\u003e"},{"categories":["Python"],"contents":"在 PyCharm 的 File =\u0026gt; Settings\n打開後 在搜尋欄位 打上 wheels\n就可以在 Change font size with Ctrl + Mouse Wheels 打勾\n然後呢~ 就可以用 Ctrl + 滑鼠滾輪 調整字體大小啦! ","permalink":"https://brian-hsu.github.io/blog/my_share-006/","tags":["PyCharm"],"title":"PyCharm 調整字體大小"},{"categories":["Python"],"contents":"之前不知道為什麼，在 Mac 系統 PyCharm 沒灌成功。\n一直以為 PyCharm 不能在 Mac 免費使用。\n結果心血來潮，重新抓檔再裝。\n完美! 可以使用~\n最近有看一點 RobotFramework\n來推薦一個 RobotFramework 的 plugin\n它叫做 Robot Framework Language Server\n超棒的!\n","permalink":"https://brian-hsu.github.io/blog/my_share-005/","tags":["PyCharm","RobotFramework"],"title":"RobotFramework with PyCharm"},{"categories":["心得與介紹"],"contents":"在 VScode 按下 F1 打上 \u0026gt;setting json\n加上下列內容\n\u0026#34;workbench.colorCustomizations\u0026#34;: { \u0026#34;editor.selectionBackground\u0026#34;: \u0026#34;#ff510059\u0026#34;, \u0026#34;editor.selectionHighlightBackground\u0026#34;: \u0026#34;#e5ff005f\u0026#34; } selectionBackground 是 選取中的字串 背景顏色\nselectionHighlightBackground 是 其他行 相同字串 背景顏色\n建議 調高透明度!\n","permalink":"https://brian-hsu.github.io/blog/my_share-004/","tags":["VScode"],"title":"VScode 選取中的高亮背景色"},{"categories":["Music"],"contents":"倫·李·奧佐萊克（Karen Lee Orzolek），職業上稱為凱倫·歐（Karen O），是出生於韓國的美國歌手，詞曲作者，音樂家和唱片製作人。她是美國搖滾樂隊Yeah Yeah Yeahs的主唱。\nDon\u0026#39;t you tell another lie Don\u0026#39;t you tell another truth My heart, it isn\u0026#39;t bulletproof From visions of you Don\u0026#39;t you know the way I feel Can\u0026#39;t you read my mind Don\u0026#39;t you read between the lines For what\u0026#39;s real Forget\u0026#39;em, get\u0026#39;em, get\u0026#39;em I used to rule the streets I was young enough to know that There was something to believe in I\u0026#39;m tired of the lies they tell I\u0026#39;m trying to disguise myself The perfect crime that I\u0026#39;ll commit Is loving you despite all of it Forget\u0026#39;em, get\u0026#39;em, get\u0026#39;em I used to rule the streets I was young enough to know that There was something to believe in I\u0026#39;m tired of the lies they tell I\u0026#39;m trying to disguise myself The perfect crime that I\u0026#39;ll commit Is loving you despite all of it You\u0026#39;re my saint, you\u0026#39;re my saint You\u0026#39;re my saint, you\u0026#39;re my sensation You\u0026#39;re my saint, you\u0026#39;re my saint You\u0026#39;re my saint, you\u0026#39;re my sensation Set me free To live my life Whatever way I want to be Like smoke in a mirror I disappear Like smoke in a mirror I disappear Set me free To live my life Whatever way I want to be Like smoke in a mirror I disappear Like smoke in a mirror I disappear Don\u0026#39;t you know my eyes, my eyes They\u0026#39;ll see you only Don\u0026#39;t you know my eyes, my eyes They\u0026#39;ll see you blue Blue My one and only    ","permalink":"https://brian-hsu.github.io/blog/my_share-003/","tags":["YT"],"title":"Karen O - YO! MY SAINT"},{"categories":["gohugo"],"contents":"使用 gohugo shortcodes 功能 gohugo shortcodes 介紹網頁\n格式\n{{\u0026lt; youtube [影片後面代碼] \u0026gt;}}\n將 https://www.youtube.com/watch?v=6YwoFeNXFKk 的?v=後面的代碼放入 gohugo shortcodes\nOK! 結果如下   ","permalink":"https://brian-hsu.github.io/blog/my_share-002/","tags":["shortcodes"],"title":"gohugo shortcodes 使用"},{"categories":["心得與介紹"],"contents":"語法: ~(代表 空格符號)\n空格代碼 \u0026ldquo;\u0026amp;nbsp;\u0026rdquo; 雙空格 \u0026ldquo;\u0026amp;ensp;\u0026rdquo; 四空格 \u0026ldquo;\u0026amp;emsp;\u0026rdquo;\n1.內文(初始文字)\n這行是內文\n2.標題\n一級標題 #~內容\n這行是 一級標題 二級標題 ##~內容\n這行是 二級標題 五級標題 #####~內容\n這行是 五級標題 六級標題 ######~內容\n這行是 六級標題 3.粗體 **內容**\n最後面兩個字為 粗體\n4.斜體 *內容*\n最後面兩個字為 斜體 (粗體和斜體無法一起使用)\n5.有序序列 1.~內容\n 有序序列第一行 第二行 \u0026hellip;  6.無序序列 *~內容\n 無序序列第一行 第二行 \u0026hellip;  7.引用 \u0026gt;~內容\n 我是引用的內容\n 8.超連結 [文字](連結網址)\n這是google連結\n回此站首頁\n9.圖片 ![](連結網址)\n圖片網站:\n https://www.flaticon.com/ https://www.dreamstime.com/ https://www.pexels.com/   圖片來自連結\n站內圖片\n10.單行程式碼 `code`\nprint(\u0026quot;Hello Word\u0026quot;) # python code\n11.多行程式碼 Hugo 的多行程式碼中，所支援的所有程式語言 https://pygments.org/languages/#programming-languages\n```(程式語言樣式) more code ``` 有加上程式語言樣式 (py)\ndef is_print(w): print(w) 沒有加上程式語言樣式\ndef is_print(w):\rprint(w)\r12.表格\n| 表头 | 表头 |\r| ---- | ---- |\r| 单元格 | 单元格 |\r| 单元格 | 单元格 |\r   表头 表头     单元格 单元格   单元格 单元格    ","permalink":"https://brian-hsu.github.io/blog/my_share-001/","tags":["Markdown"],"title":"Markdown 相關介紹"}]