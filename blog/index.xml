<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on 布萊恩 | QA job | Testing</title>
    <link>https://brian-hsu.github.io/blog/</link>
    <description>Recent content in blog on 布萊恩 | QA job | Testing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 29 Oct 2019 13:49:23 +0600</lastBuildDate><atom:link href="https://brian-hsu.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用VScode來一小段python - Jupyter</title>
      <link>https://brian-hsu.github.io/blog/my_share-037/</link>
      <pubDate>Thu, 21 Jul 2022 23:18:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-037/</guid>
      <description>有時候想驗證function 邏輯, 又不想開一個 py file 這時候想到 ipython, 但! 人就是這麼懶.. 連terminal 也很不想打字?</description>
    </item>
    
    <item>
      <title>appium - 環境 設定 (Carthage)</title>
      <link>https://brian-hsu.github.io/blog/my_share-036/</link>
      <pubDate>Sun, 23 Jan 2022 23:18:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-036/</guid>
      <description>紀錄 appium 在 mac 的環境需要 首先是 appium-doctor 再來就是 設置 JAVA_HOME 然後就是 設置 ANDROID_HOME (adb 無法用) 請加入 ~/.</description>
    </item>
    
    <item>
      <title>Xcode - 環境 設定</title>
      <link>https://brian-hsu.github.io/blog/my_share-035/</link>
      <pubDate>Sun, 23 Jan 2022 18:18:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-035/</guid>
      <description>打開 Xcode Preferences &amp;gt; Locations Command Line Tools 請選定 Xcode 版本 ** 安裝 xcversion gem install xcode-install 提供apple ID export XCODE_INSTALL_USER=&amp;#34;name@example.</description>
    </item>
    
    <item>
      <title>環境變數 - ANDROID_HOME</title>
      <link>https://brian-hsu.github.io/blog/my_share-034/</link>
      <pubDate>Sun, 23 Jan 2022 18:18:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-034/</guid>
      <description>創建或編輯 vim ~/.zprofile # zsh vim ~/.bash_profile # bash # 貼上以下 export PATH export ANDROID_HOME={你的android studio - sdk path} export PATH=${PATH}:${ANDROID_HOME}/tools export PATH=${PATH}:${ANDROID_HOME}/platforms-tools export PATH=${PATH}:${ANDROID_HOME}/build-tools 完工, termenal resession </description>
    </item>
    
    <item>
      <title>Java 管理套件 - jenv</title>
      <link>https://brian-hsu.github.io/blog/my_share-033/</link>
      <pubDate>Sun, 23 Jan 2022 13:19:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-033/</guid>
      <description>安裝 jenv brew install jenv 設置 shell (bash) echo &amp;#39;export PATH=&amp;#34;$HOME/.</description>
    </item>
    
    <item>
      <title>MacOS - 截圖</title>
      <link>https://brian-hsu.github.io/blog/my_share-032/</link>
      <pubDate>Sat, 22 Jan 2022 18:19:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-032/</guid>
      <description>擷取全螢幕 Command + Shift + 3 擷取指定區域 Command + Shift + 4 擷取軟體視窗 Command + Shift + 4 接著再按 空白鍵 </description>
    </item>
    
    <item>
      <title>MacOS node版本管理 - n</title>
      <link>https://brian-hsu.github.io/blog/my_share-031/</link>
      <pubDate>Sat, 22 Jan 2022 16:19:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-031/</guid>
      <description>安裝吧 brew install n 安裝最新版本 n lastest 安裝最新穩定版(超棒) n stable 直接一個 n 來切換版本(su權限要給) sudo n 用好node 當然是給 npm 來個最新版本更新 npm install -g npm@latest </description>
    </item>
    
    <item>
      <title>Dominic Lewis - I Will Survive</title>
      <link>https://brian-hsu.github.io/blog/my_share-030/</link>
      <pubDate>Fri, 21 Jan 2022 18:20:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-030/</guid>
      <description>在電影&amp;quot;阿達一族2&amp;quot; 聽到管家彈鋼琴唱了歌，真的很精艷! 2022 開頭就感覺到無力? 演奏吧~ [Intro] At first I was afraid, I was petrified Kept thinkin&amp;#39; I could never live without you by my side But then I spent so many nights thinkin&amp;#39; how you did me wrong And I grew strong, and I learned how to get along [Verse 1] And so you&amp;#39;re back, from outer space I just walked in to find you here with that sad look upon your face I should have changed that stupid lock I should have made you leave your key If I&amp;#39;d have known for just one second you&amp;#39;d be back to bother me [Pre-Chorus] Go on now, go, walk out the door Just turn around now, &amp;#39;cause you&amp;#39;re not welcome anymore Weren&amp;#39;t you thе one who tried to hurt me with goodbyе?</description>
    </item>
    
    <item>
      <title>Conda 常用指令</title>
      <link>https://brian-hsu.github.io/blog/my_share-029/</link>
      <pubDate>Fri, 21 Jan 2022 18:19:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-029/</guid>
      <description>初始化 (執行後重啟終端機) conda init查看目前環境 conda env list 建立新環境 (可以指定python版本) conda create --name myenv python=3.</description>
    </item>
    
    <item>
      <title>Excel 合併文字與連結</title>
      <link>https://brian-hsu.github.io/blog/my_share-028/</link>
      <pubDate>Wed, 30 Jun 2021 22:50:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-028/</guid>
      <description>假設只有一欄文字連結 而想要直接點擊後 使用瀏覽器去導覽 excel 必須 在點選後(點兩下該儲存格) 才會顯示 link 模式 當你有上百筆這樣的情況會很麻煩 (這個情況會是用CSV轉 xls 很常見的) 先看簡單的案例 我們把 欄位 A 和 B 合併 到C 並以 link 模式顯示 在C欄位 加入函式 =HYPERLINK(B1,A1) 完成!</description>
    </item>
    
    <item>
      <title>Excel 帶入CSV (unicode)</title>
      <link>https://brian-hsu.github.io/blog/my_share-027/</link>
      <pubDate>Wed, 30 Jun 2021 22:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-027/</guid>
      <description>有時候用程式寫出來的 CSV檔 順手點兩下使用 excel 打開 打開後看到亂碼 就秒關了 所以如果想用 excel 做一些手動篩選資料的處理 就必須麻煩一些 第一步 新增 excel 空白檔案 然後打開空白檔案 資料 =&amp;gt; 從文字/CSV 選擇 CSV 檔後 會顯示視窗 在 檔案原點 點開 選擇 65001 然後載入 完成!</description>
    </item>
    
    <item>
      <title>Excel 重複標記與刪除</title>
      <link>https://brian-hsu.github.io/blog/my_share-026/</link>
      <pubDate>Wed, 30 Jun 2021 21:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-026/</guid>
      <description>假設有很多資料但是要篩選重複就顯得非常麻煩 Excel 可以幫忙標記並且可以刪除重複 假設我們有一張表 如下 選取全部的欄位 (常用 =&amp;gt; 條件式格式設定 =&amp;gt; 醒目提示儲存格規則 =&amp;gt; 重複的值) 案下確定 會看到紅色標記重複項目 如果要刪除重複 (限 直向欄,橫向列無法使用此方式) 一樣選取全部的欄位 (資料 =&amp;gt; 移除重複項) 這時候如果選擇 欄位三 將會顯示 沒有找到重複值 那我們選擇 欄位一 看看結果 OK 成功 </description>
    </item>
    
    <item>
      <title>ipython 的 線上版 jupyter notebook</title>
      <link>https://brian-hsu.github.io/blog/my_share-024/</link>
      <pubDate>Thu, 17 Jun 2021 23:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-024/</guid>
      <description>以前 ipython 使用起來特別威 沒想到後來 jupyter notebook 出來更是厲害 不過考量我是使用 conda 虛擬環境，特別去建立一個環境給jupyter有點多餘 而且jupyter notebook 是 online 模式的 所以 docker container 特別適合 先來一段掛載 docker container 指令吧~ (我的環境為 Windows) docker run --name jupyter \ -v C:\docker_data\jupyter:/home/jovyan/work \ -d --restart=always -p 8888:8888 \ jupyter/datascience-notebook \ start.</description>
    </item>
    
    <item>
      <title>python 計算 執行時間</title>
      <link>https://brian-hsu.github.io/blog/my_share-023/</link>
      <pubDate>Thu, 17 Jun 2021 12:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-023/</guid>
      <description>有時候用秒數計算執行時間 測試資料不夠龐大的情況會使結果變成負值 這時候使用奈秒來看會比較快一些 1秒=1000000000 (ns), 1(ns) =1／1000000000(s)； 來看看 exsample (比較 deque 與 list 的 append 時間花費) from collections import deque import time d = deque(range(10000000)) l = list(range(10000000)) t1 = time.</description>
    </item>
    
    <item>
      <title>取代 python 的 logging</title>
      <link>https://brian-hsu.github.io/blog/my_share-022/</link>
      <pubDate>Thu, 17 Jun 2021 01:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-022/</guid>
      <description>喜歡這款無腦操作的 神logging 並且無須變更就很美的 log 先看看效果 from loguru import logger as logur logur.</description>
    </item>
    
    <item>
      <title>Python debug 神器之一</title>
      <link>https://brian-hsu.github.io/blog/my_share-021/</link>
      <pubDate>Wed, 16 Jun 2021 23:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-021/</guid>
      <description>Never use print for debugging again 真的講得很好~ 新手最土炮的方法就是在問題之前 print 函式 有幸可以不再使用 print 真的是很幸福的事 來看看範例 import pysnooper @pysnooper.</description>
    </item>
    
    <item>
      <title>Python trace 神器之一</title>
      <link>https://brian-hsu.github.io/blog/my_share-020/</link>
      <pubDate>Wed, 16 Jun 2021 20:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-020/</guid>
      <description>遇到 Exception 但不知道哪邊或是 root cause 發現 stackprinter 真的是很棒 來看看範例 import stackprinter a = [10, 4, 3, 9, 22, &amp;#34;0&amp;#34;] try: b = [i for i in a if 100 % i == 0] except Exception as e: print(e) stackprinter.</description>
    </item>
    
    <item>
      <title>Python 常用 函式 isinstance</title>
      <link>https://brian-hsu.github.io/blog/my_share-019/</link>
      <pubDate>Mon, 14 Jun 2021 23:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-019/</guid>
      <description>在不知道這個函式之前,判斷變數為 int 就得自己寫定義 發現了 isinstance 這個函式後, 判斷變數值非常簡單 def it_isinstance(x): if isinstance(x, int): print(&amp;#34;{} is Int&amp;#34;.</description>
    </item>
    
    <item>
      <title>Docker Network</title>
      <link>https://brian-hsu.github.io/blog/my_share-018/</link>
      <pubDate>Wed, 09 Jun 2021 00:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-018/</guid>
      <description>docker network 有三種模式 none, 打上 docker network ls 顯示如下: NETWORK ID NAME DRIVER SCOPE 430f7df300e4 bridge bridge local 9eec1e943774 host host local 3c5057c3a127 none null local 打上 docker network inspect none 顯示如下: [{&amp;quot;Name&amp;quot;: &amp;quot;none&amp;quot;,&amp;quot;Id&amp;quot;: &amp;quot;3c5057c3a127f6868eda780bdc7755ad57bd9187efca9452b38f254af676d8c7&amp;quot;,&amp;quot;Created&amp;quot;: &amp;quot;2021-06-08T08:03:14.</description>
    </item>
    
    <item>
      <title>Alpine Linux</title>
      <link>https://brian-hsu.github.io/blog/my_share-017/</link>
      <pubDate>Tue, 08 Jun 2021 16:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-017/</guid>
      <description>WIKI 介紹如下  Alpine Linux是一個由社群開發的基於musl和BusyBox的Linux作業系統，該作業系統以安全為理念，面向x86路由器、防火牆、虛擬私人網路、IP電話盒及伺服器而設計。
 package management 叫 apk add	# 添加 package del	# 刪除 package fix	# 修復或升級 package update	# 更新可用 package 的索引 info	# 印出 有關已安裝或可用 package 的信息 search	# 搜索 package 或描述 upgrade	# 升級當前已安裝的軟件 package cache	# 本地緩存 package 存儲庫的維護操作 version	# 比較已安裝和可用 package 之間的版本差異 index	# 從 package 列表中創建存儲庫索引 fetch	# 下載（但不安裝） package audit	# 列出原始 package 安裝狀態的文件系統的更改 verify	# 驗證 package 簽名 dot	# 為給定 package 創建GraphViz圖表描述 policy	# 顯示更新給定 package 的存儲庫，加上還提供 package 的存儲庫 stats	# 顯示統計信息，包括安裝和可用的 package 數，目錄和文件的數量等。 manifest	# 顯示給定 package 中包含的文件的校驗和 常用的 與 apt 一樣 先更新 apk update 列出 目前已經安裝的 package list: apk info 列出 目前已經安裝的 package list 加上版本與資訊 : apk info -vv 如果 想知道 哪個 binary 是 哪個 package : apk info --who-owns [path] apk info --who-owns /bin/sh## /bin/sh is owned by busybox-1.</description>
    </item>
    
    <item>
      <title>Windows WSL</title>
      <link>https://brian-hsu.github.io/blog/my_share-016/</link>
      <pubDate>Tue, 08 Jun 2021 11:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-016/</guid>
      <description>WIKI 介紹如下  適用於Linux的Windows子系統（英語：Windows Subsystem for Linux，簡稱WSL）是一個為在Windows 10和Windows Server 2019上能夠原生執行Linux二進位可執行檔（ELF格式）的相容層。</description>
    </item>
    
    <item>
      <title>Trisquel Mini</title>
      <link>https://brian-hsu.github.io/blog/my_share-015/</link>
      <pubDate>Tue, 08 Jun 2021 10:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-015/</guid>
      <description>WIKI 介紹如下  該計劃旨在建成一個完全由自由軟體構造而不含任何專有軟體及專有韌體，使用Linux-libre——一個清除所有非自由代碼（二進位blob）Linux核心的，與Ubuntu一樣友善易用的GNU/Linux作業系統。[3]Trisquel依賴於使用者的捐款。[4]它的標誌是一個藍色三曲枝圖。
  Trisquel Mini是主線Trisquel的替代版本，用於上網本及古舊機器。它使用低資源需求的LXDE及輕量的GTK+、X Window System，以替代GNOME和Qt/KDE應用程式。</description>
    </item>
    
    <item>
      <title>Linux 常見壓縮與解壓縮指令</title>
      <link>https://brian-hsu.github.io/blog/my_share-014/</link>
      <pubDate>Mon, 07 Jun 2021 23:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-014/</guid>
      <description>.tar
打包： tar cvf FileName.tar DirName 解包： tar xvf FileName.tar .</description>
    </item>
    
    <item>
      <title>Docker Portainer</title>
      <link>https://brian-hsu.github.io/blog/my_share-013/</link>
      <pubDate>Mon, 07 Jun 2021 20:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-013/</guid>
      <description>docker pull portainer/portainer-ce:linux-amd64-2.5.1-alpine 新版image repo 是 portainer-ce docker run -d --restart always --name portainer -p 9000:9000 \ -v /var/run/docker.</description>
    </item>
    
    <item>
      <title>Docker 指令</title>
      <link>https://brian-hsu.github.io/blog/my_share-012/</link>
      <pubDate>Mon, 07 Jun 2021 15:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-012/</guid>
      <description>docker image ls -a : 列出所有 docker image docker image rm [image ID] : 刪除 docker image 列出docker container 全部資訊 docker container ls -a 刪除docker container 資料 docker container rm [CONTAINER ID] -d 進程 --restart always：如果 container 遇到例外的情況被 stop 掉，例如是重新開機，docker 會試著重新啟動此 container</description>
    </item>
    
    <item>
      <title>Ubuntu install docker</title>
      <link>https://brian-hsu.github.io/blog/my_share-011/</link>
      <pubDate>Mon, 07 Jun 2021 12:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-011/</guid>
      <description>ubuntu 體系的 docker 安裝為 apt-get install docker.io 安裝好可以查詢 docker 版本 docker --version 啟動 docker 服務 service docker start 拉下第一個 image docker pull hello-world 查看 是否有 image docker images 試著跑 這個 image docker run hello-world 成功會顯示如下 Hello from Docker!</description>
    </item>
    
    <item>
      <title>VBox 設定 轉發 port</title>
      <link>https://brian-hsu.github.io/blog/my_share-009/</link>
      <pubDate>Mon, 07 Jun 2021 12:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-009/</guid>
      <description>我們知道VM是虛擬技術之一 所以呢，創建好的機器也是一個獨立的環境 設定好 forwarding，就可以和本機系統互通了，最常用的就是 SSH 應用囉! 進去 forwarding 如下 設定 [主機IP] 就是127.</description>
    </item>
    
    <item>
      <title>Vim 內部常用指令介紹</title>
      <link>https://brian-hsu.github.io/blog/my_share-010/</link>
      <pubDate>Mon, 07 Jun 2021 12:41:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-010/</guid>
      <description>搜尋文字 /[你要尋找的文字]\c \c 是指 忽略大小寫 進入搜尋文字 尋找 下一個匹配 按 n 鍵 (小寫n) 進入搜尋文字 尋找 上一個匹配 按 N 鍵 (大寫N，也可以說是 shift + n ) 會這幾個步驟，搭配 google 設定 Linux，可以節省不少時間喔。 </description>
    </item>
    
    <item>
      <title>設定 Linux (Ubuntu) SSH</title>
      <link>https://brian-hsu.github.io/blog/my_share-008/</link>
      <pubDate>Mon, 07 Jun 2021 12:30:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-008/</guid>
      <description># apt-get install ssh # apt-get install openssh-server 設定 ssh config # vim /etc/ssh/sshd_config Port 22 PasswordAuthentication yes PermitRootLogin yes # 是否開放 root 登入 重啟服務 /etc/init.</description>
    </item>
    
    <item>
      <title>基本 HTML 語法 &lt;TAG&gt;</title>
      <link>https://brian-hsu.github.io/blog/my_share-007/</link>
      <pubDate>Sun, 06 Jun 2021 18:30:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-007/</guid>
      <description>HTML 文件之標題 &amp;lt;title&amp;gt; 本文內容 &amp;lt;body&amp;gt; 標題字 1 至 6 級 &amp;lt;h1&amp;gt; to &amp;lt;h6&amp;gt; 段落 &amp;lt;p&amp;gt; 換行 &amp;lt;br&amp;gt; 橫線 &amp;lt;hr&amp;gt; 註解 &amp;lt;!</description>
    </item>
    
    <item>
      <title>PyCharm 設定</title>
      <link>https://brian-hsu.github.io/blog/my_share-006/</link>
      <pubDate>Fri, 04 Jun 2021 22:40:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-006/</guid>
      <description>在 PyCharm 的 File =&amp;gt; Settings
打開後 在搜尋欄位 打上 wheels</description>
    </item>
    
    <item>
      <title>RobotFramework with PyCharm</title>
      <link>https://brian-hsu.github.io/blog/my_share-005/</link>
      <pubDate>Fri, 04 Jun 2021 22:40:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-005/</guid>
      <description>之前不知道為什麼，在 Mac 系統 PyCharm 沒灌成功。
一直以為 PyCharm 不能在 Mac 免費使用。</description>
    </item>
    
    <item>
      <title>VScode 選取中的高亮背景色</title>
      <link>https://brian-hsu.github.io/blog/my_share-004/</link>
      <pubDate>Fri, 04 Jun 2021 22:40:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-004/</guid>
      <description>在 VScode 按下 F1 打上 &amp;gt;setting json
加上下列內容
&amp;#34;workbench.colorCustomizations&amp;#34;: { &amp;#34;editor.</description>
    </item>
    
    <item>
      <title>Karen O - YO! MY SAINT</title>
      <link>https://brian-hsu.github.io/blog/my_share-003/</link>
      <pubDate>Fri, 04 Jun 2021 22:22:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-003/</guid>
      <description>倫·李·奧佐萊克（Karen Lee Orzolek），職業上稱為凱倫·歐（Karen O），是出生於韓國的美國歌手，詞曲作者，音樂家和唱片製作人。她是美國搖滾樂隊Yeah Yeah Yeahs的主唱。
Don&amp;#39;t you tell another lie Don&amp;#39;t you tell another truth My heart, it isn&amp;#39;t bulletproof From visions of you 你不要再說謊了 你不要再說實話了 我的心，它不是防彈的 從你的願景 Don&amp;#39;t you know the way I feel Can&amp;#39;t you read my mind Don&amp;#39;t you read between the lines For what&amp;#39;s real 你不知道我的感受嗎 你無法讀懂我的心思 不要在字裡行間閱讀 對於什麼是真實的 Forget&amp;#39;em, get&amp;#39;em, get&amp;#39;em I used to rule the streets I was young enough to know that There was something to believe in I&amp;#39;m tired of the lies they tell I&amp;#39;m trying to disguise myself The perfect crime that I&amp;#39;ll commit Is loving you despite all of it 忘了他們，抓住他們，抓住他們 我曾經統治過街道 我還年輕，知道 有一些值得相信的東西 我厭倦了他們說的謊言 我試著掩飾自己 我將犯下的完美罪行 是愛你，儘管這一切 Forget&amp;#39;em, get&amp;#39;em, get&amp;#39;em I used to rule the streets I was young enough to know that There was something to believe in I&amp;#39;m tired of the lies they tell I&amp;#39;m trying to disguise myself The perfect crime that I&amp;#39;ll commit Is loving you despite all of it 忘了他們，抓住他們，抓住他們 我曾經統治過街道 我還年輕，知道 有一些值得相信的東西 我厭倦了他們說的謊言 我試著掩飾自己 我將犯下的完美罪行 是愛你，儘管這一切 You&amp;#39;re my saint, you&amp;#39;re my saint You&amp;#39;re my saint, you&amp;#39;re my sensation You&amp;#39;re my saint, you&amp;#39;re my saint You&amp;#39;re my saint, you&amp;#39;re my sensation 你是我的聖人，你是我的聖人 你是我的聖人，你是我的感覺 你是我的聖人，你是我的聖人 你是我的聖人，你是我的感覺 Set me free To live my life Whatever way I want to be Like smoke in a mirror I disappear Like smoke in a mirror I disappear 有空來看我 過我的生活 無論哪種方式 我想成為 就像鏡子里的煙 我消失了 就像鏡子里的煙 我消失了 Set me free To live my life Whatever way I want to be Like smoke in a mirror I disappear Like smoke in a mirror I disappear 有空來看我 過我的生活 無論哪種方式 我想成為 就像鏡子里的煙 我消失了 就像鏡子里的煙 我消失了 Don&amp;#39;t you know my eyes, my eyes They&amp;#39;ll see you only 難道你不知道我的眼睛，我的眼睛 他們只會看到你 Don&amp;#39;t you know my eyes, my eyes They&amp;#39;ll see you blue 難道你不知道我的眼睛，我的眼睛 他們只會看到你 Blue My one and only 藍色 我唯一的一個    </description>
    </item>
    
    <item>
      <title>gohugo shortcodes 使用</title>
      <link>https://brian-hsu.github.io/blog/my_share-002/</link>
      <pubDate>Thu, 03 Jun 2021 19:22:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-002/</guid>
      <description>使用 gohugo shortcodes 功能 gohugo shortcodes 介紹網頁
格式
{{&amp;lt; youtube [影片後面代碼] &amp;gt;}}</description>
    </item>
    
    <item>
      <title>Markdown 相關介紹</title>
      <link>https://brian-hsu.github.io/blog/my_share-001/</link>
      <pubDate>Thu, 03 Jun 2021 19:02:00 +0800</pubDate>
      
      <guid>https://brian-hsu.github.io/blog/my_share-001/</guid>
      <description>語法: ~(代表 空格符號)
空格代碼 &amp;ldquo;&amp;amp;nbsp;&amp;rdquo; 雙空格 &amp;ldquo;&amp;amp;ensp;&amp;rdquo; 四空格 &amp;ldquo;&amp;amp;emsp;&amp;rdquo;
1.內文(初始文字)</description>
    </item>
    
  </channel>
</rss>
